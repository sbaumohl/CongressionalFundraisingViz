//! SeaORM Entity. Generated by sea-orm-codegen 0.9.2

use async_graphql::SimpleObject;
use sea_orm::entity::prelude::*;


#[derive(Clone, Debug, PartialEq, DeriveEntityModel, SimpleObject)]
#[sea_orm(table_name = "committees")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub name: String,
    pub designation: String,
    pub org_type: String,
    pub connected_org: Option<String>,
    pub candidate_id: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::members::Entity",
        from = "Column::CandidateId",
        to = "super::members::Column::FecCandidateId",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Members,
}

impl Related<super::members::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Members.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
